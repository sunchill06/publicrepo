    # ...    
    # Backend Go and Java applications load balanced on weightage
    #upstream backend {
       #server go-app:8080 weight=7;
       #server java-app:8080 weight=3;
    #}

    # Upstream GO application
    upstream go {
        server go-app:8080;
    }

    # Upstream JAVA application
    upstream java {
	server java-app:8080;
    }

    # Setting request_id if not set by the client, 
    # this is further used for logging as well as load balancing
    map $http_x_request_id $uuid {
        default "${request_id}";
    	~*      "${http_x_request_id}";
    }

    # Load balance traffic to respective upstream based on hash generated using request_id
    split_clients "${uuid}" $appversion {
        70%   "go";
        *     "java";
    }

    # Logging access logs between proxy (nginx) and upstream servers
    # This can also be used to see how the traffic is distributed between upstreams
    log_format upstream_logs '$remote_addr - $remote_user [$time_local] "$request" $status '
  '"$upstream_addr" $uuid $upstream_response_time $upstream_http_etag';

    # Server block 
    server {
        # ...
        listen 8080;
	access_log /var/log/nginx/upstream.log upstream_logs;
	add_header X-Request-ID $uuid; # add request_id to response header, Optional
	proxy_set_header Host $host;
	proxy_set_header X-Request-ID $uuid;

        location / {
	    rewrite ^/$ /hotels permanent;   # Redirect / to /hotels
            proxy_pass http://$appversion;
        }
    }
